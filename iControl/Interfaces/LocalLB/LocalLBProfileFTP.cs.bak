//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2407.
// 
namespace iControl {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LocalLB.ProfileFTPBinding", Namespace="urn:iControl")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LocalLBProfileEnabledState))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LocalLBProfilePortNumber))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CommonStatistic))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LocalLBProfileFTPProfileFTPStatisticEntry))]
    public class LocalLBProfileFTP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public LocalLBProfileFTP() {
            this.Url = "https://url_to_service";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        public void create(string[] profile_names) {
            this.Invoke("create", new object[] {
                        profile_names});
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincreate(string[] profile_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("create", new object[] {
                        profile_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endcreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        public void delete_all_profiles() {
            this.Invoke("delete_all_profiles", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete_all_profiles(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete_all_profiles", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void Enddelete_all_profiles(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        public void delete_profile(string[] profile_names) {
            this.Invoke("delete_profile", new object[] {
                        profile_names});
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete_profile(string[] profile_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete_profile", new object[] {
                        profile_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Enddelete_profile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public LocalLBProfileFTPProfileFTPStatistics get_all_statistics() {
            object[] results = this.Invoke("get_all_statistics", new object[0]);
            return ((LocalLBProfileFTPProfileFTPStatistics)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_all_statistics(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_all_statistics", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public LocalLBProfileFTPProfileFTPStatistics Endget_all_statistics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LocalLBProfileFTPProfileFTPStatistics)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public LocalLBProfilePortNumber[] get_data_channel_port(string[] profile_names) {
            object[] results = this.Invoke("get_data_channel_port", new object[] {
                        profile_names});
            return ((LocalLBProfilePortNumber[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_data_channel_port(string[] profile_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_data_channel_port", new object[] {
                        profile_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public LocalLBProfilePortNumber[] Endget_data_channel_port(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LocalLBProfilePortNumber[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] get_default_profile(string[] profile_names) {
            object[] results = this.Invoke("get_default_profile", new object[] {
                        profile_names});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_default_profile(string[] profile_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_default_profile", new object[] {
                        profile_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] Endget_default_profile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] get_list() {
            object[] results = this.Invoke("get_list", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_list(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_list", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] Endget_list(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public LocalLBProfileEnabledState[] get_security_enabled_request_state(string[] profile_names) {
            object[] results = this.Invoke("get_security_enabled_request_state", new object[] {
                        profile_names});
            return ((LocalLBProfileEnabledState[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_security_enabled_request_state(string[] profile_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_security_enabled_request_state", new object[] {
                        profile_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public LocalLBProfileEnabledState[] Endget_security_enabled_request_state(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LocalLBProfileEnabledState[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public LocalLBProfileFTPProfileFTPStatistics get_statistics(string[] profile_names) {
            object[] results = this.Invoke("get_statistics", new object[] {
                        profile_names});
            return ((LocalLBProfileFTPProfileFTPStatistics)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_statistics(string[] profile_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_statistics", new object[] {
                        profile_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public LocalLBProfileFTPProfileFTPStatistics Endget_statistics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LocalLBProfileFTPProfileFTPStatistics)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public LocalLBProfileEnabledState[] get_translated_extended_request_state(string[] profile_names) {
            object[] results = this.Invoke("get_translated_extended_request_state", new object[] {
                        profile_names});
            return ((LocalLBProfileEnabledState[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_translated_extended_request_state(string[] profile_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_translated_extended_request_state", new object[] {
                        profile_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public LocalLBProfileEnabledState[] Endget_translated_extended_request_state(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LocalLBProfileEnabledState[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string get_version() {
            object[] results = this.Invoke("get_version", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_version(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_version", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_version(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool[] is_base_profile(string[] profile_names) {
            object[] results = this.Invoke("is_base_profile", new object[] {
                        profile_names});
            return ((bool[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginis_base_profile(string[] profile_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("is_base_profile", new object[] {
                        profile_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool[] Endis_base_profile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        public void reset_statistics(string[] profile_names) {
            this.Invoke("reset_statistics", new object[] {
                        profile_names});
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginreset_statistics(string[] profile_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("reset_statistics", new object[] {
                        profile_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endreset_statistics(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        public void set_data_channel_port(string[] profile_names, LocalLBProfilePortNumber[] ports) {
            this.Invoke("set_data_channel_port", new object[] {
                        profile_names,
                        ports});
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginset_data_channel_port(string[] profile_names, LocalLBProfilePortNumber[] ports, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("set_data_channel_port", new object[] {
                        profile_names,
                        ports}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endset_data_channel_port(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        public void set_default_profile(string[] profile_names, string[] defaults) {
            this.Invoke("set_default_profile", new object[] {
                        profile_names,
                        defaults});
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginset_default_profile(string[] profile_names, string[] defaults, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("set_default_profile", new object[] {
                        profile_names,
                        defaults}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endset_default_profile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        public void set_security_enabled_request_state(string[] profile_names, LocalLBProfileEnabledState[] states) {
            this.Invoke("set_security_enabled_request_state", new object[] {
                        profile_names,
                        states});
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginset_security_enabled_request_state(string[] profile_names, LocalLBProfileEnabledState[] states, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("set_security_enabled_request_state", new object[] {
                        profile_names,
                        states}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endset_security_enabled_request_state(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:iControl:LocalLB/ProfileFTP", RequestNamespace="urn:iControl:LocalLB/ProfileFTP", ResponseNamespace="urn:iControl:LocalLB/ProfileFTP")]
        public void set_translated_extended_request_state(string[] profile_names, LocalLBProfileEnabledState[] states) {
            this.Invoke("set_translated_extended_request_state", new object[] {
                        profile_names,
                        states});
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginset_translated_extended_request_state(string[] profile_names, LocalLBProfileEnabledState[] states, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("set_translated_extended_request_state", new object[] {
                        profile_names,
                        states}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endset_translated_extended_request_state(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LocalLB.ProfileFTP.ProfileFTPStatistics", "urn:iControl")]
    public class LocalLBProfileFTPProfileFTPStatistics {
        
        /// <remarks/>
        public LocalLBProfileFTPProfileFTPStatisticEntry[] statistics;
        
        /// <remarks/>
        public CommonTimeStamp time_stamp;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LocalLB.ProfileFTP.ProfileFTPStatisticEntry", "urn:iControl")]
    public class LocalLBProfileFTPProfileFTPStatisticEntry {
        
        /// <remarks/>
        public string profile_name;
        
        /// <remarks/>
        public CommonStatistic[] statistics;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("Common.Statistic", "urn:iControl")]
    public class CommonStatistic {
        
        /// <remarks/>
        public CommonStatisticType type;
        
        /// <remarks/>
        public CommonULong64 value;
        
        /// <remarks/>
        public long time_stamp;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("Common.StatisticType", "urn:iControl")]
    public enum CommonStatisticType {
        
        /// <remarks/>
        STATISTIC_NO_NODE_ERRORS,
        
        /// <remarks/>
        STATISTIC_MINIMUM_CONNECTION_DURATION,
        
        /// <remarks/>
        STATISTIC_MEAN_CONNECTION_DURATION,
        
        /// <remarks/>
        STATISTIC_MAXIMUM_CONNECTION_DURATION,
        
        /// <remarks/>
        STATISTIC_TOTAL_REQUESTS,
        
        /// <remarks/>
        STATISTIC_TOTAL_PVA_ASSISTED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_CURRENT_PVA_ASSISTED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_TIMEOUTS,
        
        /// <remarks/>
        STATISTIC_COLLISIONS,
        
        /// <remarks/>
        STATISTIC_DROPPED_PACKETS_IN,
        
        /// <remarks/>
        STATISTIC_DROPPED_PACKETS_OUT,
        
        /// <remarks/>
        STATISTIC_DROPPED_PACKETS_TOTAL,
        
        /// <remarks/>
        STATISTIC_ERRORS_IN,
        
        /// <remarks/>
        STATISTIC_ERRORS_OUT,
        
        /// <remarks/>
        STATISTIC_TM_TOTAL_CYCLES,
        
        /// <remarks/>
        STATISTIC_TM_IDLE_CYCLES,
        
        /// <remarks/>
        STATISTIC_TM_SLEEP_CYCLES,
        
        /// <remarks/>
        STATISTIC_MAINTENANCE_MODE_DENIALS,
        
        /// <remarks/>
        STATISTIC_VIRTUAL_ADDRESS_MAXIMUM_CONNECTION_DENIALS,
        
        /// <remarks/>
        STATISTIC_VIRTUAL_SERVER_MAXIMUM_CONNECTION_DENIALS,
        
        /// <remarks/>
        STATISTIC_VIRTUAL_SERVER_NON_SYN_DENIALS,
        
        /// <remarks/>
        STATISTIC_NO_HANDLER_DENIALS,
        
        /// <remarks/>
        STATISTIC_LICENSE_DENIALS,
        
        /// <remarks/>
        STATISTIC_CONNECTION_FAILED_MEMORY_ERRORS,
        
        /// <remarks/>
        STATISTIC_ACTIVE_CPU_COUNT,
        
        /// <remarks/>
        STATISTIC_MULTI_PROCESSOR_MODE,
        
        /// <remarks/>
        STATISTIC_MEMORY_TOTAL_BYTES,
        
        /// <remarks/>
        STATISTIC_MEMORY_USED_BYTES,
        
        /// <remarks/>
        STATISTIC_IP_TRANSMITTED_PACKETS,
        
        /// <remarks/>
        STATISTIC_IP_RECEIVED_PACKETS,
        
        /// <remarks/>
        STATISTIC_IP_DROPPED_PACKETS,
        
        /// <remarks/>
        STATISTIC_IP_TRANSMITTED_FRAGMENTS,
        
        /// <remarks/>
        STATISTIC_IP_DROPPED_TRANSMITTED_FRAGMENTS,
        
        /// <remarks/>
        STATISTIC_IP_RECEIVED_FRAGMENTS,
        
        /// <remarks/>
        STATISTIC_IP_DROPPED_RECEIVED_FRAGMENTS,
        
        /// <remarks/>
        STATISTIC_IP_REASSEMBLED_PACKETS,
        
        /// <remarks/>
        STATISTIC_IP_INVALID_CHECKSUM_ERRORS,
        
        /// <remarks/>
        STATISTIC_IP_INVALID_LENGTH_ERRORS,
        
        /// <remarks/>
        STATISTIC_IP_MEMORY_ERRORS,
        
        /// <remarks/>
        STATISTIC_IP_RETRANSMITTED_ERRORS,
        
        /// <remarks/>
        STATISTIC_IP_INVALID_PROTOCOL_ERRORS,
        
        /// <remarks/>
        STATISTIC_IP_OPTIONS_ERRORS,
        
        /// <remarks/>
        STATISTIC_IP_REASSEMBLED_TOO_LONG_ERRORS,
        
        /// <remarks/>
        STATISTIC_IPV6_TRANSMITTED_PACKETS,
        
        /// <remarks/>
        STATISTIC_IPV6_RECEIVED_PACKETS,
        
        /// <remarks/>
        STATISTIC_IPV6_DROPPED_PACKETS,
        
        /// <remarks/>
        STATISTIC_IPV6_TRANSMITTED_FRAGMENTS,
        
        /// <remarks/>
        STATISTIC_IPV6_DROPPED_TRANSMITTED_FRAGMENTS,
        
        /// <remarks/>
        STATISTIC_IPV6_RECEIVED_FRAGMENTS,
        
        /// <remarks/>
        STATISTIC_IPV6_DROPPED_RECEIVED_FRAGMENTS,
        
        /// <remarks/>
        STATISTIC_IPV6_REASSEMBLED_PACKETS,
        
        /// <remarks/>
        STATISTIC_IPV6_INVALID_CHECKSUM_ERRORS,
        
        /// <remarks/>
        STATISTIC_IPV6_INVALID_LENGTH_ERRORS,
        
        /// <remarks/>
        STATISTIC_IPV6_MEMORY_ERRORS,
        
        /// <remarks/>
        STATISTIC_IPV6_RETRANSMITTED_ERRORS,
        
        /// <remarks/>
        STATISTIC_IPV6_INVALID_PROTOCOL_ERRORS,
        
        /// <remarks/>
        STATISTIC_IPV6_OPTIONS_ERRORS,
        
        /// <remarks/>
        STATISTIC_IPV6_REASSEMBLED_TOO_LONG_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMP_TRANSMITTED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMP_RETRANSMITTED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMP_RECEIVED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMP_FORWARDED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMP_DROPPED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMP_INVALID_CHECKSUM_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMP_INVALID_LENGTH_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMP_MEMORY_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMP_RETRANSMITTED_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMP_INVALID_PROTOCOL_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMP_OPTIONS_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMP_OTHER_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_TRANSMITTED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_RETRANSMITTED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_RECEIVED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_FORWARDED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_DROPPED_PACKETS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_INVALID_CHECKSUM_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_INVALID_LENGTH_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_MEMORY_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_RETRANSMITTED_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_INVALID_PROTOCOL_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_OPTIONS_ERRORS,
        
        /// <remarks/>
        STATISTIC_ICMPV6_OTHER_ERRORS,
        
        /// <remarks/>
        STATISTIC_UDP_OPEN_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_UDP_ACCEPTED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_UDP_ACCEPT_FAILURES,
        
        /// <remarks/>
        STATISTIC_UDP_ESTABLISHED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_UDP_CONNECTION_FAILURES,
        
        /// <remarks/>
        STATISTIC_UDP_EXPIRED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_UDP_TRANSMITTED_DATAGRAMS,
        
        /// <remarks/>
        STATISTIC_UDP_RECEIVED_DATAGRAMS,
        
        /// <remarks/>
        STATISTIC_UDP_RECEIVED_MALFORMED_DATAGRAMS,
        
        /// <remarks/>
        STATISTIC_UDP_RECEIVED_UNREACHABLE_ICMP_DATAGRAMS,
        
        /// <remarks/>
        STATISTIC_UDP_RECEIVED_BAD_CHECKSUM_DATAGRAMS,
        
        /// <remarks/>
        STATISTIC_UDP_RECEIVED_NO_CHECKSUM_DATAGRAMS,
        
        /// <remarks/>
        STATISTIC_TCP_OPEN_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_TCP_CLOSE_WAIT_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_TCP_FIN_WAIT_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_TCP_TIME_WAIT_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_TCP_ACCEPTED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_TCP_ACCEPT_FAILURES,
        
        /// <remarks/>
        STATISTIC_TCP_ESTABLISHED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_TCP_CONNECTION_FAILURES,
        
        /// <remarks/>
        STATISTIC_TCP_EXPIRED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_TCP_ABANDONED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_TCP_RECEIVED_RESETS,
        
        /// <remarks/>
        STATISTIC_TCP_RECEIVED_BAD_CHECKSUMS,
        
        /// <remarks/>
        STATISTIC_TCP_RECEIVED_BAD_SEGMENTS,
        
        /// <remarks/>
        STATISTIC_TCP_RECEIVED_OUT_OF_ORDER_SEGMENTS,
        
        /// <remarks/>
        STATISTIC_TCP_RECEIVED_SYN_COOKIES,
        
        /// <remarks/>
        STATISTIC_TCP_RECEIVED_BAD_SYN_COOKIES,
        
        /// <remarks/>
        STATISTIC_TCP_SYN_CACHE_OVERFLOWS,
        
        /// <remarks/>
        STATISTIC_TCP_RETRANSMITTED_SEGMENTS,
        
        /// <remarks/>
        STATISTIC_BYTES_IN,
        
        /// <remarks/>
        STATISTIC_BYTES_OUT,
        
        /// <remarks/>
        STATISTIC_PACKETS_IN,
        
        /// <remarks/>
        STATISTIC_PACKETS_OUT,
        
        /// <remarks/>
        STATISTIC_MULTICASTS_IN,
        
        /// <remarks/>
        STATISTIC_MULTICASTS_OUT,
        
        /// <remarks/>
        STATISTIC_EPHEMERAL_BYTES_IN,
        
        /// <remarks/>
        STATISTIC_EPHEMERAL_BYTES_OUT,
        
        /// <remarks/>
        STATISTIC_EPHEMERAL_PACKETS_IN,
        
        /// <remarks/>
        STATISTIC_EPHEMERAL_PACKETS_OUT,
        
        /// <remarks/>
        STATISTIC_EPHEMERAL_CURRENT_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_EPHEMERAL_MAXIMUM_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_EPHEMERAL_TOTAL_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_CLIENT_SIDE_BYTES_IN,
        
        /// <remarks/>
        STATISTIC_CLIENT_SIDE_BYTES_OUT,
        
        /// <remarks/>
        STATISTIC_CLIENT_SIDE_PACKETS_IN,
        
        /// <remarks/>
        STATISTIC_CLIENT_SIDE_PACKETS_OUT,
        
        /// <remarks/>
        STATISTIC_CLIENT_SIDE_CURRENT_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_CLIENT_SIDE_MAXIMUM_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_CLIENT_SIDE_TOTAL_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_PVA_CLIENT_SIDE_BYTES_IN,
        
        /// <remarks/>
        STATISTIC_PVA_CLIENT_SIDE_BYTES_OUT,
        
        /// <remarks/>
        STATISTIC_PVA_CLIENT_SIDE_PACKETS_IN,
        
        /// <remarks/>
        STATISTIC_PVA_CLIENT_SIDE_PACKETS_OUT,
        
        /// <remarks/>
        STATISTIC_PVA_CLIENT_SIDE_CURRENT_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_PVA_CLIENT_SIDE_MAXIMUM_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_PVA_CLIENT_SIDE_TOTAL_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SERVER_SIDE_BYTES_IN,
        
        /// <remarks/>
        STATISTIC_SERVER_SIDE_BYTES_OUT,
        
        /// <remarks/>
        STATISTIC_SERVER_SIDE_PACKETS_IN,
        
        /// <remarks/>
        STATISTIC_SERVER_SIDE_PACKETS_OUT,
        
        /// <remarks/>
        STATISTIC_SERVER_SIDE_CURRENT_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SERVER_SIDE_MAXIMUM_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SERVER_SIDE_TOTAL_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_PVA_SERVER_SIDE_BYTES_IN,
        
        /// <remarks/>
        STATISTIC_PVA_SERVER_SIDE_BYTES_OUT,
        
        /// <remarks/>
        STATISTIC_PVA_SERVER_SIDE_PACKETS_IN,
        
        /// <remarks/>
        STATISTIC_PVA_SERVER_SIDE_PACKETS_OUT,
        
        /// <remarks/>
        STATISTIC_PVA_SERVER_SIDE_CURRENT_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_PVA_SERVER_SIDE_MAXIMUM_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_PVA_SERVER_SIDE_TOTAL_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_PACKET_FILTER_HITS,
        
        /// <remarks/>
        STATISTIC_STREAM_REPLACEMENTS,
        
        /// <remarks/>
        STATISTIC_ONECONNECT_CURRENT_IDLE_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_ONECONNECT_MAXIMUM_IDLE_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_ONECONNECT_TOTAL_REUSES,
        
        /// <remarks/>
        STATISTIC_ONECONNECT_NEW_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_RATE_CLASS_BYTES_AT_BASE_RATE,
        
        /// <remarks/>
        STATISTIC_RATE_CLASS_BYTES_DURING_BURST,
        
        /// <remarks/>
        STATISTIC_RATE_CLASS_BYTES_DROPPED,
        
        /// <remarks/>
        STATISTIC_RATE_CLASS_BYTES_QUEUED,
        
        /// <remarks/>
        STATISTIC_RATE_CLASS_BYTES_PER_SEC,
        
        /// <remarks/>
        STATISTIC_RULE_FAILURES,
        
        /// <remarks/>
        STATISTIC_RULE_ABORTS,
        
        /// <remarks/>
        STATISTIC_RULE_TOTAL_EXECUTIONS,
        
        /// <remarks/>
        STATISTIC_RULE_AVERAGE_CYCLES,
        
        /// <remarks/>
        STATISTIC_RULE_MAXIMUM_CYCLES,
        
        /// <remarks/>
        STATISTIC_RULE_MINIMUM_CYCLES,
        
        /// <remarks/>
        STATISTIC_HTTP_COOKIE_PERSIST_INSERTS,
        
        /// <remarks/>
        STATISTIC_HTTP_2XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_3XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_4XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_5XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_TOTAL_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTP_GET_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTP_POST_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTP_V9_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTP_V10_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTP_V11_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTP_V9_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_V10_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_V11_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_MAXIMUM_KEEPALIVE_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTP_BUCKET_1K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_BUCKET_4K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_BUCKET_16K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_BUCKET_32K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_BUCKET_64K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTP_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_NULL_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_HTML_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_HTML_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_CSS_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_CSS_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_JS_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_JS_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_XML_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_XML_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_SGML_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_SGML_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_PLAIN_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_PLAIN_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_OCTET_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_OCTET_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_IMAGE_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_IMAGE_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_VIDEO_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_VIDEO_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_AUDIO_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_AUDIO_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_OTHER_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_OTHER_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_SSL_CACHE_CURRENT_ENTRIES,
        
        /// <remarks/>
        STATISTIC_SSL_CACHE_MAXIMUM_ENTRIES,
        
        /// <remarks/>
        STATISTIC_SSL_CACHE_OVERFLOWS,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_ADH_KEY_EXCHANGE,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_DH_DSS_KEY_EXCHANGE,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_DH_RSA_KEY_EXCHANGE,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_DSS_KEY_EXCHANGE,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_EDH_DSS_KEY_EXCHANGE,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_EDH_RSA_KEY_EXCHANGE,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_RSA_KEY_EXCHANGE,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_NULL_BULK,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_AES_BULK,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_DES_BULK,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_IDEA_BULK,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_RC2_BULK,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_RC4_BULK,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_NULL_DIGEST,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_MD5_DIGEST,
        
        /// <remarks/>
        STATISTIC_SSL_CIPHER_SHA_DIGEST,
        
        /// <remarks/>
        STATISTIC_SSL_PROTOCOL_SSLV2,
        
        /// <remarks/>
        STATISTIC_SSL_PROTOCOL_SSLV3,
        
        /// <remarks/>
        STATISTIC_SSL_PROTOCOL_TLSV1,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_CURRENT_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_MAXIMUM_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_CURRENT_NATIVE_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_MAXIMUM_NATIVE_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_TOTAL_NATIVE_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_CURRENT_COMPATIBLE_MODE_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_MAXIMUM_COMPATIBLE_MODE_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_TOTAL_COMPATIBLE_MODE_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_ENCRYPTED_BYTES_IN,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_ENCRYPTED_BYTES_OUT,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_DECRYPTED_BYTES_IN,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_DECRYPTED_BYTES_OUT,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_RECORDS_IN,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_RECORDS_OUT,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_FULLY_HW_ACCELERATED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_PARTIALLY_HW_ACCELERATED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_NON_HW_ACCELERATED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_PREMATURE_DISCONNECTS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_MIDSTREAM_RENEGOTIATIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_SESSION_CACHE_CURRENT_ENTRIES,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_SESSION_CACHE_HITS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_SESSION_CACHE_LOOKUPS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_SESSION_CACHE_OVERFLOWS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_SESSION_CACHE_INVALIDATIONS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_VALID_PEER_CERTIFICATES,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_INVALID_PEER_CERTIFICATES,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_NO_PEER_CERTIFICATES,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_HANDSHAKE_FAILURES,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_BAD_RECORDS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_FATAL_ALERTS,
        
        /// <remarks/>
        STATISTIC_AUTH_TOTAL_SESSIONS,
        
        /// <remarks/>
        STATISTIC_AUTH_CURRENT_SESSIONS,
        
        /// <remarks/>
        STATISTIC_AUTH_MAXIMUM_SESSIONS,
        
        /// <remarks/>
        STATISTIC_AUTH_SUCCESS_RESULTS,
        
        /// <remarks/>
        STATISTIC_AUTH_FAILURE_RESULTS,
        
        /// <remarks/>
        STATISTIC_AUTH_WANT_CREDENTIAL_RESULTS,
        
        /// <remarks/>
        STATISTIC_AUTH_ERROR_RESULTS,
        
        /// <remarks/>
        STATISTIC_XML_TOTAL_ERRORS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_CLIENT_SYN_COOKIES,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_CLIENT_ACCEPTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_SERVER_CONNECTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_CONNECTION_POOL_CURRENT_SIZE,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_CONNECTION_POOL_MAXIMUM_SIZE,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_CONNECTION_POOL_REUSES,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_CONNECTION_POOL_EXHAUSTED,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_TOTAL_REQUESTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_UNBUFFERED_REQUESTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_GET_REQUESTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_POST_REQUESTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_V9_REQUESTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_V10_REQUESTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_V11_REQUESTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_2XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_3XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_4XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_5XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_REQUEST_PARSE_ERRORS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_RESPONSE_PARSE_ERRORS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_CLIENTSIDE_BAD_SEGMENTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_SERVERSIDE_BAD_SEGMENTS,
        
        /// <remarks/>
        STATISTIC_FAST_HTTP_PIPELINED_REQUESTS,
        
        /// <remarks/>
        STATISTIC_SSL_COMMON_NOT_SSL_HANDSHAKE_FAILURES,
        
        /// <remarks/>
        STATISTIC_HTTP_RAM_CACHE_HITS,
        
        /// <remarks/>
        STATISTIC_HTTP_RAM_CACHE_MISSES,
        
        /// <remarks/>
        STATISTIC_HTTP_RAM_CACHE_TOTAL_MISSES,
        
        /// <remarks/>
        STATISTIC_HTTP_RAM_CACHE_HIT_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_RAM_CACHE_MISS_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_RAM_CACHE_TOTAL_MISS_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTP_RAM_CACHE_SIZE,
        
        /// <remarks/>
        STATISTIC_HTTP_RAM_CACHE_COUNT,
        
        /// <remarks/>
        STATISTIC_HTTP_RAM_CACHE_EVICTIONS,
        
        /// <remarks/>
        STATISTIC_VCOMPRESSION_QUEUED_BYTES,
        
        /// <remarks/>
        STATISTIC_VCOMPRESSION_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_VCOMPRESSION_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_VCOMPRESSION_TOTAL_STREAMS,
        
        /// <remarks/>
        STATISTIC_VCOMPRESSION_CURRENT_STREAMS,
        
        /// <remarks/>
        STATISTIC_IIOP_TOTAL_REQUESTS,
        
        /// <remarks/>
        STATISTIC_IIOP_TOTAL_RESPONSES,
        
        /// <remarks/>
        STATISTIC_IIOP_TOTAL_CANCELS,
        
        /// <remarks/>
        STATISTIC_IIOP_TOTAL_ERRORS,
        
        /// <remarks/>
        STATISTIC_IIOP_TOTAL_FRAGMENTS,
        
        /// <remarks/>
        STATISTIC_RTSP_TOTAL_REQUESTS,
        
        /// <remarks/>
        STATISTIC_RTSP_TOTAL_RESPONSES,
        
        /// <remarks/>
        STATISTIC_RTSP_TOTAL_ERRORS,
        
        /// <remarks/>
        STATISTIC_RTSP_TOTAL_INTERLEAVED_DATA,
        
        /// <remarks/>
        STATISTIC_GTM_METRICS_CPU_USAGE,
        
        /// <remarks/>
        STATISTIC_GTM_METRICS_MEMORY_AVAILABLE,
        
        /// <remarks/>
        STATISTIC_GTM_METRICS_BITS_PER_SECOND_IN,
        
        /// <remarks/>
        STATISTIC_GTM_METRICS_BITS_PER_SECOND_OUT,
        
        /// <remarks/>
        STATISTIC_GTM_METRICS_PACKETS_PER_SECOND_IN,
        
        /// <remarks/>
        STATISTIC_GTM_METRICS_PACKETS_PER_SECOND_OUT,
        
        /// <remarks/>
        STATISTIC_GTM_METRICS_TOTAL_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_GTM_METRICS_TOTAL_CONNECTION_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_TOTAL_BIT_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_TOTAL_GATEWAY_BIT_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_INBOUND_GATEWAY_BIT_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_OUTBOUND_GATEWAY_BIT_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_TOTAL_VS_BIT_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_INBOUND_VS_BIT_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_OUTBOUND_VS_BIT_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_TOTAL_INBOUND_BIT_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_TOTAL_OUTBOUND_BIT_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_LCS_OUT,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_LCS_IN,
        
        /// <remarks/>
        STATISTIC_GTM_POOL_PREFERRED_LB_METHODS,
        
        /// <remarks/>
        STATISTIC_GTM_POOL_ALTERNATE_LB_METHODS,
        
        /// <remarks/>
        STATISTIC_GTM_POOL_FALLBACK_LB_METHODS,
        
        /// <remarks/>
        STATISTIC_GTM_POOL_DROPPED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_GTM_POOL_EXPLICIT_IP,
        
        /// <remarks/>
        STATISTIC_GTM_POOL_RETURN_TO_DNS,
        
        /// <remarks/>
        STATISTIC_GTM_POOL_MEMBER_PREFERRED_LB_METHODS,
        
        /// <remarks/>
        STATISTIC_GTM_POOL_MEMBER_ALTERNATE_LB_METHODS,
        
        /// <remarks/>
        STATISTIC_GTM_POOL_MEMBER_FALLBACK_LB_METHODS,
        
        /// <remarks/>
        STATISTIC_GTM_SERVER_VS_PICKS,
        
        /// <remarks/>
        STATISTIC_GTM_VIRTUAL_SERVER_PICKS,
        
        /// <remarks/>
        STATISTIC_GTM_WIDEIP_REQUESTS,
        
        /// <remarks/>
        STATISTIC_GTM_WIDEIP_RESOLUTIONS,
        
        /// <remarks/>
        STATISTIC_GTM_WIDEIP_PERSISTED,
        
        /// <remarks/>
        STATISTIC_GTM_WIDEIP_PREFERRED_LB_METHODS,
        
        /// <remarks/>
        STATISTIC_GTM_WIDEIP_ALTERNATE_LB_METHODS,
        
        /// <remarks/>
        STATISTIC_GTM_WIDEIP_FALLBACK_LB_METHODS,
        
        /// <remarks/>
        STATISTIC_GTM_WIDEIP_DROPPED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_GTM_WIDEIP_EXPLICIT_IP,
        
        /// <remarks/>
        STATISTIC_GTM_WIDEIP_RETURN_TO_DNS,
        
        /// <remarks/>
        STATISTIC_GTM_MEMORY_TOTAL_BYTES,
        
        /// <remarks/>
        STATISTIC_GTM_MEMORY_USED_BYTES,
        
        /// <remarks/>
        STATISTIC_GTM_IQUERY_RECONNECTS,
        
        /// <remarks/>
        STATISTIC_GTM_IQUERY_RECEIVED_BYTES,
        
        /// <remarks/>
        STATISTIC_GTM_IQUERY_SENT_BYTES,
        
        /// <remarks/>
        STATISTIC_GTM_BACKLOGGED_SENDS,
        
        /// <remarks/>
        STATISTIC_GTM_DROPPED_BYTES,
        
        /// <remarks/>
        STATISTIC_GTM_PATH_CURRENT_RTT,
        
        /// <remarks/>
        STATISTIC_GTM_PATH_AVERAGE_RTT,
        
        /// <remarks/>
        STATISTIC_GTM_PATH_CURRENT_HOPS,
        
        /// <remarks/>
        STATISTIC_GTM_PATH_AVERAGE_HOPS,
        
        /// <remarks/>
        STATISTIC_GTM_PATH_CURRENT_COMPENSATION_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_PATH_AVERAGE_COMPENSATION_RATE,
        
        /// <remarks/>
        STATISTIC_GTM_LDNS_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_COOKIE_PERSIST_INSERTS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_2XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_3XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_4XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_5XX_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_TOTAL_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_GET_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_POST_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_V9_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_V10_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_V11_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_V9_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_V10_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_V11_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_MAXIMUM_KEEPALIVE_REQUESTS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_BUCKET_1K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_BUCKET_4K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_BUCKET_16K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_BUCKET_32K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_BUCKET_64K_RESPONSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_NULL_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_HTML_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_HTML_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_CSS_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_CSS_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_JS_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_JS_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_XML_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_XML_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_SGML_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_SGML_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_PLAIN_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_PLAIN_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_OCTET_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_OCTET_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_IMAGE_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_IMAGE_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_VIDEO_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_VIDEO_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_AUDIO_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_AUDIO_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_OTHER_PRE_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_OTHER_POST_COMPRESSION_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_RAM_CACHE_HITS,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_RAM_CACHE_MISSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_RAM_CACHE_TOTAL_MISSES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_RAM_CACHE_HIT_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_RAM_CACHE_MISS_BYTES,
        
        /// <remarks/>
        STATISTIC_HTTPCLASS_RAM_CACHE_TOTAL_MISS_BYTES,
        
        /// <remarks/>
        STATISTIC_SCTP_ACCEPTS,
        
        /// <remarks/>
        STATISTIC_SCTP_FAILED_ACCEPT,
        
        /// <remarks/>
        STATISTIC_SCTP_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SCTP_FAILED_CONNECTION,
        
        /// <remarks/>
        STATISTIC_SCTP_EXPIRED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SCTP_ABANDONED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_SCTP_RESETS,
        
        /// <remarks/>
        STATISTIC_SCTP_BAD_CHECKSUMS,
        
        /// <remarks/>
        STATISTIC_SCTP_COOKIES,
        
        /// <remarks/>
        STATISTIC_SCTP_BAD_COOKIES,
        
        /// <remarks/>
        STATISTIC_GTM_LINK_PATHS,
        
        /// <remarks/>
        STATISTIC_GTM_TOTAL_LDNSES,
        
        /// <remarks/>
        STATISTIC_GTM_TOTAL_PATHS,
        
        /// <remarks/>
        STATISTIC_HARDWARE_SYN_COOKIES_GENERATED,
        
        /// <remarks/>
        STATISTIC_HARDWARE_SYN_COOKIES_DETECTED,
        
        /// <remarks/>
        STATISTIC_FASTL4_OPEN_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_FASTL4_ACCEPTED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_FASTL4_ACCEPT_FAILURES,
        
        /// <remarks/>
        STATISTIC_FASTL4_EXPIRED_CONNECTIONS,
        
        /// <remarks/>
        STATISTIC_FASTL4_RECEIVED_BAD_PACKET,
        
        /// <remarks/>
        STATISTIC_FASTL4_ACCEPTED_ICMP_UNREACH_OR_TCP_RST,
        
        /// <remarks/>
        STATISTIC_FASTL4_ACCEPTED_TCP_RST_OUT_OF_WIN,
        
        /// <remarks/>
        STATISTIC_FASTL4_RECEIVED_BAD_CHECKSUMS,
        
        /// <remarks/>
        STATISTIC_FASTL4_RECEIVED_BAD_TXERR,
        
        /// <remarks/>
        STATISTIC_FASTL4_RECEIVED_SYN_COOKIES_ISSUED,
        
        /// <remarks/>
        STATISTIC_FASTL4_RECEIVED_SYN_COOKIES_ACCEPTED,
        
        /// <remarks/>
        STATISTIC_FASTL4_RECEIVED_SYN_COOKIES_REJECTED,
        
        /// <remarks/>
        STATISTIC_FASTL4_RECEIVED_SYN_COOKIES_SYN_TO_SERVER_RETRANS,
        
        /// <remarks/>
        STATISTIC_TM_PID,
        
        /// <remarks/>
        STATISTIC_TM_CPU,
        
        /// <remarks/>
        STATISTIC_TM_TMID,
        
        /// <remarks/>
        STATISTIC_TM_NPUS,
        
        /// <remarks/>
        STATISTIC_TM_CMP_CONN_REDIRECTED,
        
        /// <remarks/>
        STATISTIC_CPU_COUNT,
        
        /// <remarks/>
        STATISTIC_CPU_INFO_CPU_ID,
        
        /// <remarks/>
        STATISTIC_CPU_INFO_USER,
        
        /// <remarks/>
        STATISTIC_CPU_INFO_NICED,
        
        /// <remarks/>
        STATISTIC_CPU_INFO_SYSTEM,
        
        /// <remarks/>
        STATISTIC_CPU_INFO_IDLE,
        
        /// <remarks/>
        STATISTIC_CPU_INFO_IRQ,
        
        /// <remarks/>
        STATISTIC_CPU_INFO_SOFTIRQ,
        
        /// <remarks/>
        STATISTIC_CPU_INFO_IOWAIT,
        
        /// <remarks/>
        STATISTIC_CPU_INFO_USAGE_RATIO,
        
        /// <remarks/>
        STATISTIC_SIP_REQUESTS,
        
        /// <remarks/>
        STATISTIC_SIP_RESPONSES,
        
        /// <remarks/>
        STATISTIC_SIP_BAD_MESSAGES,
        
        /// <remarks/>
        STATISTIC_SIP_DROPS,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("Common.ULong64", "urn:iControl")]
    public class CommonULong64 {
        
        /// <remarks/>
        public long high;
        
        /// <remarks/>
        public long low;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LocalLB.ProfileEnabledState", "urn:iControl")]
    public class LocalLBProfileEnabledState {
        
        /// <remarks/>
        public CommonEnabledState value;
        
        /// <remarks/>
        public bool default_flag;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("Common.EnabledState", "urn:iControl")]
    public enum CommonEnabledState {
        
        /// <remarks/>
        STATE_DISABLED,
        
        /// <remarks/>
        STATE_ENABLED,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("LocalLB.ProfilePortNumber", "urn:iControl")]
    public class LocalLBProfilePortNumber {
        
        /// <remarks/>
        public long value;
        
        /// <remarks/>
        public bool default_flag;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("Common.TimeStamp", "urn:iControl")]
    public class CommonTimeStamp {
        
        /// <remarks/>
        public long year;
        
        /// <remarks/>
        public long month;
        
        /// <remarks/>
        public long day;
        
        /// <remarks/>
        public long hour;
        
        /// <remarks/>
        public long minute;
        
        /// <remarks/>
        public long second;
    }
}
